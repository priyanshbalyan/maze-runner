{"version":3,"file":"static/webpack/static/development/pages/index.js.bb14e47ef3bf046899a0.hot-update.js","sources":["webpack:///./algorithms/AStar.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport * as _ from 'lodash';\n\nfunction getNeighbors(currentNode, grid) {\n  const array = [];\n  const { row, col } = currentNode;\n  if (row > 0) array.push(grid[row - 1][col]);\n  if (col > 0) array.push(grid[row][col - 1]);\n  if (row < grid.length - 1) array.push(grid[row + 1][col]);\n  if (col < grid[0].length - 1) array.push(grid[row][col + 1]);\n  return _.filter(array, (node) => !node.isVisited && !node.isWall);\n}\n\nfunction Astar(grid, startNode, endNode) {\n  const openList = [];\n  const closeList = [];\n  const visitedNodes = [];\n  startNode.f = 0;\n  startNode.g = 0;\n  startNode.h = 0;\n  endNode.f = 0;\n  endNode.g = 0;\n  endNode.h = 0;\n  openList.push(startNode);\n\n  while (openList.length) {\n    let currentNode = openList[0];\n    let currentIndex = 0;\n    for (let i = 0; i < openList.length; i += 1) {\n      if (openList[i].f < currentNode.f) {\n        currentNode = openList[i];\n        currentIndex = i;\n      }\n    }\n    openList.splice(currentIndex, 1);\n    closeList.push(currentNode);\n    visitedNodes.push(currentNode);\n    if (currentNode === endNode) return visitedNodes;\n\n    const neighbors = getNeighbors(currentNode, grid);\n\n    _.each(neighbors, (neighbor) => {\n      if (_.find(closeList, neighbor)) return;\n\n      neighbor.g = currentNode.g + 1;\n      neighbor.h = Math.abs(endNode.row - neighbor.row) + Math.abs(endNode.col - neighbor.col);\n      neighbor.f = neighbor.g + neighbor.h;\n      neighbor.previousNode = currentNode;\n\n      if (_.find(openList, neighbor)) {\n        if (neighbor.g > _.find(openList, neighbor).g) return;\n      }\n      openList.push(neighbor);\n      neighbor.isVisited = true;\n    });\n  }\n\n  return visitedNodes;\n}\n\nexport default Astar;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAzCA;AACA;AAWA;AAAA;AACA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}